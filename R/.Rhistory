j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp)
for (occurenceIndex in playerOccurenceInText) {
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
playerTemp
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
print(player$`player information`$name)
print(playerComment)
print()
print()
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
print(player$`player information`$name)
print(playerComment)
print("")
print("")
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
print(player$`player information`$name)
print(playerComment)
print("")
print("")
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
# Creating the Folders if not exists
path <- "..\\Data\\Output\\Test\\"
if (!(dir.exists(path))){
dir.create(path)
}
for (year in years) {
for (week in weeks) {
path <- paste(c("..\\Data\\Output\\Test\\", year), collapse = "")
if (!(dir.exists(path))){
dir.create(path)
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)))
}
print(player$`player information`$name)
print(playerComment)
print("")
print("")
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\Test\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
library(stringr)
library(rjson)
# Function extracts all numbers from given text
numExtract <- function(string) {
allNumbers <- regmatches(string, gregexpr("[[:digit:]]+", string))
allNumbers <- as.numeric(unlist(allNumbers))
allNumbers <- as.list(strsplit(toString(allNumbers), ", ")[[1]])
return(allNumbers)
}
weeks <- list("01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20")
years <- list("2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017")
# Creating the Folders if not exists
path <- "..\\Data\\Output\\"
if (!(dir.exists(path))){
dir.create(path)
}
for (year in years) {
for (week in weeks) {
path <- paste(c("..\\Data\\Output\\", year), collapse = "")
if (!(dir.exists(path))){
dir.create(path)
}
}
}
id <- 1
for (year in years) {
for (week in weeks) {
weekFile <- paste(c("..\\Data\\RMoreInformation\\", year, "\\week_", week, ".json"), collapse = "") # File with the information of the game
if (file.exists(weekFile)) {
resultWeek <- rjson::fromJSON(file = weekFile)
i <- 1 # For iteration purpose
for (game in resultWeek$games) {
j <- 1
if (length(game$players) > 1){ # Games which doesn't have any players are filtered here
for (player in game$players) {
playerInformation <- player$`game information` # Get the detailed information of the player for this game
properties <- paste(names(playerInformation), playerInformation)
playerComment <- ""
for (tempCurrentPlayerOccurence in str_locate_all(game$comments, player$`player information`$name)) {
firstOccurenceOfOtherPlayerInText <- str_length(game$comments)
for (playerTemp in game$players) {
playerOccurenceInText <- str_locate_all(game$comments, playerTemp$`player information`$name)
for (occurenceIndex in playerOccurenceInText) {
if (firstOccurenceOfOtherPlayerInText > occurenceIndex[[1]] && occurenceIndex[[1]] > tempCurrentPlayerOccurence[[2]]) {
firstOccurenceOfOtherPlayerInText <- occurenceIndex[[1]] - 1
}
}
}
playerComment <- paste(c(playerComment, substr(game$comments, tempCurrentPlayerOccurence[[1]], firstOccurenceOfOtherPlayerInText)), collapse="")
}
numbers <- numExtract(playerComment) # Get numbers from text
# Check for each number if it occurs in the statistics of the player
for (number in numbers) {
for (property in properties) {
propertyName <- strsplit(property, "[[:space:]]")[[1]][1]
propertyValue <- strsplit(property, "[[:space:]]")[[1]][2]
if (number == propertyValue) {
if (number != 0) {
playerInformation[[propertyName]] <- list(propertyValue, id) # Add marker and unique ID for annotation, if match is found
names(playerInformation[[propertyName]]) <- c("propertyValue", "annotationID")
id <- id + 1
}
}
}
}
resultWeek$games[[i]]$players[[j]]$`game information` <- playerInformation
j <- j + 1
}
}
i <- i + 1
}
exportJSON <- rjson::toJSON(resultWeek, 1) # Generate JSON
fileName <- paste(c("..\\Data\\Output\\", year, "\\week_", week, ".json"), collapse = "")
write(exportJSON, fileName) # Save JSON to file
}
}
}
